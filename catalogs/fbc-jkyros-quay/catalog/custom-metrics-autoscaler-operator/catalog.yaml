---
defaultChannel: stable
icon:
  base64data: PHN2ZyBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCAzOCAzOCIgdmlld0JveD0iMCAwIDM4IDM4IiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPjxwYXRoIGQ9Im0yNy43IDEuNmgtMTcuNGMtNC44IDAtOC43IDMuOS04LjcgOC43djE3LjRjMCA0LjggMy45IDguNyA4LjcgOC43aDE3LjRjNC44IDAgOC43LTMuOSA4LjctOC43di0xNy40YzAtNC44LTMuOS04LjctOC43LTguN3oiIGZpbGw9IiNmZmYiLz48cGF0aCBkPSJtMjggMi4yYzQuMyAwIDcuOCAzLjUgNy44IDcuOHYxOGMwIDQuMy0zLjUgNy44LTcuOCA3LjhoLTE4Yy00LjMgMC03LjgtMy41LTcuOC03Ljh2LTE4YzAtNC4zIDMuNS03LjggNy44LTcuOHptMC0xLjJoLTE4Yy01IDAtOSA0LTkgOXYxOGMwIDUgNCA5IDkgOWgxOGM1IDAgOS00IDktOXYtMThjMC01LTQtOS05LTl6Ii8+PHBhdGggZD0ibTI4IDI0LjFjLS4yIDAtLjQtLjEtLjUtLjMtLjItLjMtLjEtLjcuMi0uOWwuNi0uM3YtLjZjMC0uMy4zLS42LjYtLjZzLjYuMy42LjZ2MWMwIC4yLS4xLjQtLjMuNWwtLjkuNWMtLjEuMS0uMi4xLS4zLjF6Ii8+PHBhdGggZD0ibTI4LjkgMjAuMmMtLjMgMC0uNi0uMy0uNi0uNnYtMS4yYzAtLjMuMy0uNi42LS42cy42LjMuNi42djEuMmMwIC4zLS4zLjYtLjYuNnoiLz48cGF0aCBkPSJtMjguOSAxNi42Yy0uMyAwLS42LS4zLS42LS42di0uNmwtLjYtLjRjLS4zLS4yLS40LS42LS4yLS45cy42LS40LjktLjJsLjkuNWMuMi4xLjMuMy4zLjV2MWMtLjEuNC0uNC43LS43Ljd6Ii8+PHBhdGggZD0ibTI1LjkgMTMuOWMtLjEgMC0uMiAwLS4zLS4xbC0xLS42Yy0uMy0uMi0uNC0uNi0uMi0uOXMuNi0uNC45LS4ybDEgLjZjLjMuMi40LjYuMi45LS4yLjItLjQuMy0uNi4zeiIvPjxwYXRoIGQ9Im0yMi44IDEyLjFjLS4xIDAtLjIgMC0uMy0uMWwtLjYtLjMtLjUuM2MtLjMuMi0uNy4xLS45LS4ycy0uMS0uNy4yLS45bC45LS41Yy4yLS4xLjQtLjEuNiAwbC45LjVjLjMuMi40LjYuMi45LS4xLjItLjMuMy0uNS4zeiIvPjxwYXRoIGQ9Im0yMS45IDI3LjZjLS4xIDAtLjIgMC0uMy0uMWwtLjgtLjVjLS4zLS4yLS40LS42LS4yLS45cy42LS40LjktLjJsLjYuMy42LS4zYy4zLS4yLjctLjEuOS4ycy4xLjctLjIuOWwtLjkuNWMtLjQuMS0uNS4xLS42LjF6Ii8+PHBhdGggZD0ibTI0LjkgMjUuOWMtLjIgMC0uNC0uMS0uNS0uMy0uMi0uMy0uMS0uNy4yLS45bDEtLjZjLjMtLjIuNy0uMS45LjJzLjEuNy0uMi45bC0xIC42Yy0uMi4xLS4zLjEtLjQuMXoiLz48cGF0aCBkPSJtMjMgMjN2LThsLTYuOS00LTcgNHY4bDcgNHoiIGZpbGw9IiNmZmYiLz48cGF0aCBkPSJtMTYuMSAyNy42Yy0uMSAwLS4yIDAtLjMtLjFsLTYuOS00Yy0uMi0uMS0uMy0uMy0uMy0uNXYtOGMwLS4yLjEtLjQuMy0uNWw2LjktNGMuMi0uMS40LS4xLjYgMGw2LjkgNGMuMi4xLjMuMy4zLjV2OGMwIC4yLS4xLjQtLjMuNWwtNi45IDRjLS4xLjEtLjIuMS0uMy4xem0tNi4zLTUgNi4zIDMuNiA2LjMtMy42di03LjNsLTYuMy0zLjYtNi4zIDMuNnoiLz48cGF0aCBkPSJtMTguNiAxNy45Yy0uMS0uMi0uMy0uMy0uNS0uM2gtMXYtMy4xYzAtLjMtLjItLjUtLjUtLjZzLS42LjEtLjcuNGwtMi4zIDUuM2MtLjEuMi0uMS40IDAgLjZzLjMuMy41LjNoMXYzLjFjMCAuMy4yLjUuNS42aC4xYy4yIDAgLjUtLjEuNi0uNGwyLjMtNS4yYy4xLS4zLjEtLjUgMC0uN3oiIGZpbGw9IiNlMDAiLz48L3N2Zz4=
  mediatype: image/svg+xml
name: openshift-custom-metrics-autoscaler-operator
schema: olm.package
---
entries:
- name: custom-metrics-autoscaler.v2.15.1-1
  skipRange: '>=2.7.1 <2.15.1-1'
name: stable
package: openshift-custom-metrics-autoscaler-operator
schema: olm.channel
---
image: quay.io/jkyros/custom-metrics-autoscaler-konflux-operator-bundle@sha256:41c41f56885a45df1a58705099dd80b5cfb7f967ce6d75c8719fb2606f45f77b
name: custom-metrics-autoscaler.v2.15.1-
package: openshift-custom-metrics-autoscaler-operator
properties:
- type: olm.gvk
  value:
    group: eventing.keda.sh
    kind: CloudEventSource
    version: v1alpha1
- type: olm.gvk
  value:
    group: keda.sh
    kind: ClusterTriggerAuthentication
    version: v1alpha1
- type: olm.gvk
  value:
    group: keda.sh
    kind: KedaController
    version: v1alpha1
- type: olm.gvk
  value:
    group: keda.sh
    kind: ScaledJob
    version: v1alpha1
- type: olm.gvk
  value:
    group: keda.sh
    kind: ScaledObject
    version: v1alpha1
- type: olm.gvk
  value:
    group: keda.sh
    kind: TriggerAuthentication
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-custom-metrics-autoscaler-operator
    version: 2.15.1-
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/jkyros/custom-metrics-autoscaler-operator/custom-metrics-autoscaler-operator@sha256:7cc972e4852d9e78fa427afed57259245311131348e049bbcfb0eae51fbdc7f8
  name: cma-operator
- image: quay.io/jkyros/custom-metrics-autoscaler-operator/keda-adapter@sha256:f73c7f48be283731f598f858381e2fc11675420026bd7ccfe0cc50764e7b4795
  name: keda-adapter
- image: quay.io/jkyros/custom-metrics-autoscaler-operator/keda-operator@sha256:1f96d955deb216bb4bb8edb24d9d26afd4d777cfa9718b3a427bd0041151c82f
  name: keda-operator
- image: quay.io/jkyros/custom-metrics-autoscaler-operator/keda-webhooks@sha256:5b7c2686462e2d3f89528d09ff1af876f48a8774a635b30492661d0c0f541ff6
  name: keda-webhooks
- image: quay.io/jkyros/custom-metrics-autoscaler-konflux-operator-bundle@sha256:41c41f56885a45df1a58705099dd80b5cfb7f967ce6d75c8719fb2606f45f77b
  name: ""
schema: olm.bundle
